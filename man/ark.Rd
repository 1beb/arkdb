% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ark.R
\name{ark}
\alias{ark}
\title{Archive tables from a database as flat files}
\usage{
ark(db_con, dir, lines = 10000L)
}
\arguments{
\item{db_con}{a database connection}

\item{dir}{a directory where we will write the compressed text files ouput}

\item{lines}{the number of lines to use in each single chunk}
}
\description{
Archive tables from a database as flat files
}
\details{
\code{ark} will archive tables from a database as compressed tsv files.
\code{ark} does this by reading only chunks at a time into memory, allowing it to
process tables that would be too large to read into memory all at once (which
is probably why you are using a database in the first place!)  Compressed
text files will likely take up much less space, making them easier to store and
transfer over networks.  Compressed plain-text files are also more archival
friendly, as they rely on widely avialable and long-established open source compression
algorithms and plain text, making them less vulnerable to loss by changes in
database technology and formats.
}
\examples{
\donttest{
sql_path <- tempdir()
db <- dbplyr::nycflights13_sqlite(sql_path)
dir <- file.path(tempdir(), "nycflights")
dir.create(dir)

ark(db, dir)
list.files(dir)


## clean up
unlink(dir, TRUE)
}
}
